{"version":3,"sources":["App.js","index.js"],"names":["showNotification","message","a","Notification","permission","requestPermission","StatusBar","miner","updateMiner","isPolling","address","alertHashRate","isError","averageHashRate","Form","Group","InputGroup","Prepend","Text","Button","onClick","Append","MinerStatus","removeMiner","name","style","padding","margin","backgroundColor","size","variant","Control","type","placeholder","value","onChange","evt","target","id","Miners","miners","setMiners","minerComponents","map","i","updated","newMiners","splice","callback","delay","intervalId","React","useRef","savedCallback","useEffect","current","window","setInterval","clearInterval","useInterval","Promise","all","fetch","then","res","json","resolve","data","results","m","Container","App","localStorage","getItem","useState","JSON","parse","paddingTop","Navbar","Brand","concat","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f3b6604.chunk.js","sourcesContent":["import './App.css';\nimport { Button, Col, Container, Form, InputGroup, Navbar, NavbarBrand, Row } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { BellIcon, BellSlashIcon, CheckIcon, KebabHorizontalIcon, StopIcon } from '@primer/octicons-react';\n\nconst showNotification = async (message) => {\n  if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    new Notification(message);\n  }\n  // Otherwise, we need to ask the user for permission\n  else if (Notification.permission !== \"denied\") {\n    const permission = await Notification.requestPermission()\n\n    // If the user accepts, let's create a notification\n    if (permission === \"granted\") {\n      new Notification(message);\n    }\n  }\n}\n\nfunction useInterval(callback, delay) {\n  const intervalId = React.useRef(null);\n  const savedCallback = React.useRef(callback);\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  });\n  React.useEffect(() => {\n    const tick = () => savedCallback.current();\n    if (typeof delay === 'number') {\n      intervalId.current = window.setInterval(tick, delay);\n      return () => window.clearInterval(intervalId.current);\n    }\n  }, [delay]);\n  return intervalId.current;\n}\n\nconst newMiner = () => ({\n  name:             'New Miner',\n  address:          '',\n  alertHashRate:    350,\n  isPolling:        false,\n  isError:          false,\n  averageHashRate:  -1\n});\n\nconst StatusBar = ({ miner, updateMiner }) => {\n  const { address, alertHashRate, isPolling, isError, averageHashRate } = miner;\n\n  return (\n    <Form.Group>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>\n            { isPolling ? (isError ? <StopIcon /> : <CheckIcon />) : <KebabHorizontalIcon /> }\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n\n        <Button onClick={() => {\n          updateMiner({ ...miner, isPolling: !isPolling })\n        }}>\n          { isPolling ? <BellIcon /> : <BellSlashIcon />}\n        </Button>\n        <InputGroup.Append>\n          <InputGroup.Text>{averageHashRate} Mh/s</InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\nconst MinerStatus = ({ miner, updateMiner, removeMiner }) => {\n  const { name, address, alertHashRate } = miner;\n\n  return (\n    <div style={{ padding: '10px', margin: '6px', backgroundColor: '#EEEEEE' }}>\n      <Form>\n        <Form.Group>\n          <Button size='sm' variant='danger' onClick={() => removeMiner()}>Remove</Button>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='text' placeholder='Nickname' value={name} onChange={evt => updateMiner({ ...miner, name: evt.target.value })} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type='text' placeholder='Address' value={address} onChange={(evt) => {\n            updateMiner({ ...miner, address: evt.target.value })\n          }} />\n        </Form.Group>\n        <Form.Group>\n          <InputGroup>\n            <Form.Control type='number' placeholder='Minimum hash rate' value={alertHashRate} onChange={evt => updateMiner({ ...miner, alertHashRate: evt.target.value })} />\n            <InputGroup.Append>\n              <InputGroup.Text id=\"basic-addon2\">Mh/s</InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <StatusBar miner={miner} updateMiner={updateMiner} />\n      </Form>\n    </div>\n  );\n};\n\nconst Miners = ({ miners, setMiners }) => {\n  const minerComponents = miners.map((miner, i) => <MinerStatus key={i} miner={miner}\n      updateMiner={updated => {\n        const newMiners = [...miners];\n        newMiners[i] = updated;\n        setMiners(newMiners);\n      }}\n      removeMiner={() => {\n        const newMiners = [...miners];\n        newMiners.splice(i, 1);\n        setMiners(newMiners);\n      }}\n    />\n  );\n\n  useInterval(async () => {\n    const results = await Promise.all(miners.map(({ address, averageHashRate, isPolling }) =>\n      !isPolling\n        ? Promise.resolve({ data: averageHashRate })\n        : fetch(`https://api.nanopool.org/v1/eth/avghashratelimited/${address}/1`).then(res => res.json())));\n\n    // update notifications\n    for (const miner of miners) {\n      const { isError, name, averageHashRate, alertHashRate } = miner;\n      if (averageHashRate > -1 && averageHashRate < alertHashRate) {\n        if (!isError) {\n          miner.isError = true;\n\n          await showNotification(`Miner '${name} is having trouble!`);\n        }\n      } else {\n        miner.isError = false;\n      }\n    }\n\n    setMiners(miners.map((m, i) => ({\n      ...m,\n      averageHashRate: results[i].data\n    })))\n  }, 10000);\n\n  return (\n    <Container>\n      {minerComponents}\n    </Container>\n  )\n}\n\nfunction App() {\n  const json = localStorage.getItem('miners') || '[]';\n  const [miners, setMiners] = useState(JSON.parse(json));\n\n  return (\n    <div style={{ paddingTop: '20px' }}>\n      <Container>\n        <Navbar>\n          <Navbar.Brand>Nanopool Watcher</Navbar.Brand>\n          <Button onClick={async () => {\n            setMiners(miners.concat(newMiner()));\n\n            await Notification.requestPermission();\n          }}>Add Miner</Button>\n        </Navbar>\n        <Miners miners={miners} setMiners={newMiners => {\n          localStorage.setItem('miners', JSON.stringify(newMiners));\n\n          setMiners(newMiners);\n        }} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}